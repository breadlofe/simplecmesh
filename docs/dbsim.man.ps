%!PS-Adobe-3.0
%%Title: (DBSIM Reference Manual)
%%Creator: (Microsoft Word: LaserWriter 8.0 8.0)
%%CreationDate: (1:27 PM Thursday, July 1, 1993)
%%For: ()
%%Pages: 9
%%DocumentFonts: Helvetica-Bold Helvetica-BoldOblique Times-BoldItalic Times-Roman Times-Bold Times-Italic
%%DocumentNeededFonts: Helvetica-Bold Helvetica-BoldOblique Times-BoldItalic Times-Roman Times-Bold Times-Italic
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -31 -31 761 581
%ADO_ImageableArea: 0 0 730 552
%%EndComments
/md 186 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 80 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
statusdict /manualfeed false put
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *InputSlot Cassette

%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageRegion LetterSmall
lettersmall
%%EndFeature
}featurecleanup
()setjob
/pT[1 0 0 -1 31 761]def/mT[1 0 0 -1 31 761]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Helvetica-BoldOblique
%%IncludeFont: Times-BoldItalic
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Italic
/f0_1/Helvetica-Bold :mre
/f0_24 f0_1 24 scf
/f0_18 f0_1 18 scf
/f0_14 f0_1 14 scf
/f4_1/Helvetica-BoldOblique :mre
/f4_18 f4_1 18 scf
/f4_12 f4_1 12 scf
/f5_1/Times-BoldItalic :mre
/f6_1 f5_1 :ff :ms :ff def
/f6_48 f6_1 48 scf
/f7_1/Times-Roman :mre
/f7_12 f7_1 12 scf
/f7_10 f7_1 10 scf
/f8_1/Times-Bold :mre
/f8_18 f8_1 18 scf
/f8_12 f8_1 12 scf
/f9_1/Times-Italic :mre
/f9_12 f9_1 12 scf
/f10_1 f7_1 :v def
/f11_1 f5_1 1.087 scf
/f11_12 f11_1 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(; page: 1 of 9)setjob
%%EndPageSetup
gS 0 0 552 730 rC
199 67 :M
f0_18 sf
5.833 .583(RICE UNIVERSITY)J
77 97 :M
f4_18 sf
1.448 .145(Electrical & Computer Engineering Department)J
188 258 :M
f6_48 sf
/$o 1 def
6.079(DBSIM)A
172 296 :M
f0_24 sf
7.064 .706(Reference Manual)J
243 318 :M
f0_14 sf
3.157 .316(Version 1.0)J
238 341 :M
f0_18 sf
2.761 .276(June 1993)J
217 482 :M
.913 .091(J. Robert Jump)J
218 507 :M
f7_12 sf
-.065(ECE Dept., Rice University)A
247 519 :M
.519 .052(P.O. Box 1892)J
221 531 :M
.329 .033(Houston, TX 77251-1892)J
237 543 :M
-.158(email:  jrj@rice.edu)A
203 555 :M
(Phone:  \(713\) 527-8101 ext. 3576)S
113 651 :M
f7_10 sf
-.018(This manual describes a program that has not been thoroughly tested and may contain)A
113 662 :M
.27 .027(bugs.  Suggestions, criticisms, questions, or reports of any problems, errors, or bugs)J
113 673 :M
.03 .003(with the manual or the simulator are welcome and encouraged.  Please send them to J. R.)J
113 684 :M
-.058(Jump at the above address.)A
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(; page: 2 of 9)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
312 735 :M
f7_12 sf
-.668(ii)A
193 167 :M
f0_14 sf
2.312 .231(Copyright 1993 by Rice University)J
258 181 :M
3.819 .382(Houston, Texas)J
244 208 :M
2.31 .231(All Rights Reserved)J
108 256 :M
f7_12 sf
-.034(Permission to use, copy, modify, and distribute this software and its documentation for)A
108 268 :M
1.541 .154(any research purpose and without fee is hereby granted, provided that the above)J
108 280 :M
1.475 .147(copyright notice appear in all copies and that both that copyright notice and this)J
108 292 :M
1.283 .128(permission notice appear in supporting documentation, and that the name of Rice)J
108 304 :M
.606 .061(University not be used in advertising or in publicity pertaining to distribution of the)J
108 316 :M
.435 .044(software without specific, written prior permission. The inclusion of this software or)J
108 328 :M
-.065(its documentation in any commercial product without specific, written prior permission)A
108 340 :M
-.025(is prohibited.)A
108 364 :M
1.079 .108(Rice University disclaims all warranties with regard to this software, including all)J
108 376 :M
-.036(implied warranties of merchantability and fitness.  In no event shall Rice University be)A
108 388 :M
.427 .043(liable for any special, indirect or consequential damages or any damages whatsoever)J
108 400 :M
.11 .011(resulting from loss of use, data or profits, whether in an action of contract, negligence)J
108 412 :M
.006 .001(or other tortious action, arising out of or in connection with this use or performance of)J
108 424 :M
.157 .016(this software.)J
289 522 :M
f0_14 sf
.63(Credits)A
108 546 :M
f7_12 sf
.388 .039(DBSIM is derived from an X Windows debugger that was written by Omri Gazitt. It)J
108 558 :M
1.026 .103(was later modified and named VIEWSIM by David Coakley.  David Coakley also)J
108 570 :M
1.557 .156(wrote a command line version of VIEWSIM called SHSIM.  J. R. Jump revised)J
108 582 :M
-.077(SHSIM to get the currently distributed version of DBSIM.)A
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(; page: 3 of 9)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
310 735 :M
f7_12 sf
-.501(iii)A
214 86 :M
f8_18 sf
2.215 .222(TABLE OF CONTENTS)J
90 201 :M
f7_12 sf
-.123(Table of Contents)A
513 201 :M
-.501(iii)A
90 225 :M
-.021(1.  Introduction)A
516 225 :M
(1)S
117 237 :M
-.014(1.1.  Execution Control)A
516 237 :M
(1)S
117 249 :M
-.031(1.2.  Trace Filtering)A
516 249 :M
(2)S
90 273 :M
-.039(2.  DBSIM Commands)A
516 273 :M
(4)S
117 285 :M
-.047(2.1.  Initiating DBSIM)A
516 285 :M
(4)S
117 297 :M
(2.2.  The DBSIM Prompt)S
516 297 :M
(4)S
117 309 :M
-.042(2.3.  Parameter Setting Commands)A
516 309 :M
(4)S
117 321 :M
-.032(2.4.  Execution Control Commands)A
516 321 :M
(6)S
117 333 :M
(2.5.  Utility Commands)S
516 333 :M
(6)S
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(; page: 4 of 9)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
549 739 :M
f11_12 sf
(1)S
226 86 :M
f8_18 sf
3.005 .3(1.  INTRODUCTION)J
72 129 :M
f7_12 sf
-.083(DBSIM is a debugging utility for use with simulators in the Rice Parallel Processing Testbed \(RPPT\).)A
72 141 :M
-.086(It provides the user with a tool to aid in testing simulation programs written for these simulators.  It)A
72 153 :M
-.105(includes capabilities for stepping through programs in several different ways and selectively displaying)A
72 165 :M
-.088(trace data.  While conventional source-level debuggers such as dbx can also be used with the RPPT)A
72 177 :M
-.113(simulators, they provide low level trace information of the internal simulation routines as well as the)A
72 189 :M
-.053(user's code.  Unless one is familiar with the simulator source code, this information may not be very)A
72 201 :M
-.079(useful.  The trace data provided by DBSIM is customized for the RPPT simulators, so that the)A
72 213 :M
-.073(interactions of processes and operations in the user's simulation code can be easily traced.)A
72 237 :M
-.092(The RPPT currently includes the following four simulators:)A
108 261 :M
-.332(YACSIM)A
171 261 :M
-.061(- A general-purpose, process-oriented, discrete-event simulator.)A
108 273 :M
-.131(NETSIM)A
171 273 :M
-.103(- An interconnection network simulator.)A
108 285 :M
-.399(MEMSIM)A
171 285 :M
-.086(- A cache and shared-address memory simulator.)A
108 297 :M
-.096(PARCSIM )A
171 297 :M
-.156(- A parallel computer architecture simulator.)A
72 321 :M
-.154(NETSIM and MEMSIM are extensions of YACSIM that add specialized capabilities for simulating)A
72 333 :M
-.094(interconnection networks and memory systems.  PARCSIM combines NETSIM and MEMSIM with)A
72 345 :M
-.126(the capability to simulate multiple processors that communicate through a common address space or by)A
72 357 :M
-.064(sending messages through an interconnection network.)A
72 381 :M
-.1(All of these simulators can either be run under control of DBSIM, or they can be run in stand alone)A
72 393 :M
-.067(mode.  When they are running in stand alone mode, all of the code in the simulator or the user's)A
72 405 :M
-.092(program that is used to interface to DBSIM is ignored.  Therefore, it is not necessary to compile)A
72 417 :M
-.078(simulation programs differently for use with DBSIM.)A
72 441 :M
f8_12 sf
2.821 .282(1.1.  EXECUTION CONTROL)J
72 465 :M
f7_12 sf
-.082(This section describes how a user controls the execution of a simulation program using DBSIM.)A
72 477 :M
-.07(There are four different execution modes, and the user can switch among them during a program's)A
72 489 :M
-.13(execution.  They effectively provide a single-stepping capability that gives the user the ability to)A
72 501 :M
-.112(advance a simulation program one step at a time, where the size of the step can be specified in four)A
72 513 :M
-.075(different ways.  In all of these modes, the user initiates the execution of a program which then runs)A
72 525 :M
-.104(until it meets the condition specified by the execution mode.  It then stops and allows the user to)A
72 537 :M
-.133(examine the trace produced during execution and to change the mode of execution for the next)A
72 549 :M
-.115(execution phase.  There is also a limited breakpoint capability.)A
71 573 :M
f8_12 sf
2.398 .24(1.1.1.  Run "until time" Mode)J
72 597 :M
f7_12 sf
-.12(In this mode, the simulation program runs until simulation time reaches a specified time and then)A
72 609 :M
-.08(returns control to the user.  While running under this mode, the program will not continue past the)A
72 621 :M
-.086(specified stopping time.  If a program is stopped at some point in its execution while running under)A
72 633 :M
-.105(another mode or due to a breakpoint, the user can switch to this mode and then advance the simulation)A
72 645 :M
-.116(to a specific point in simulation time.  The user can then switch back to one of the other execution)A
72 657 :M
-.092(modes to continue beyond that point.  Thus, the "until time" mode provides the user with the ability to)A
72 669 :M
-.107(advance to any specific point of simulation time in the future from any point in the program.  In this)A
72 681 :M
-.133(mode the time step parameter is an absolute point in time.)A
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(; page: 5 of 9)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
72 59 :M
f4_12 sf
.548(Introduction)A
550 59 :M
(2)S
70 63 -1 1 560 62 1 70 62 @a
71 81 :M
f8_12 sf
2.419 .242(1.1.2.  Run "for time" Mode)J
72 105 :M
f7_12 sf
-.09(When a program starts or continues executing in this mode, it runs for a specified period of simulation)A
72 117 :M
-.083(time and then stops and returns control to the user.  When execution is continued, the program will)A
72 129 :M
-.105(start executing at the previous point of interruption and run for another period of simulation time. The)A
72 141 :M
-.087(period of time for the next execution phase can be changed while the program is suspended.  In this)A
72 153 :M
-.147(mode, the time step parameter is a relative amount of time that is added to the current simulation time to)A
72 165 :M
-.073(get the next stopping point.)A
71 189 :M
f8_12 sf
2.524 .252(1.1.3.  Run for "time changes" Mode)J
72 213 :M
f7_12 sf
-.099(In discrete-event simulation, execution time advances in steps of varying size.  If the simulator)A
72 225 :M
-.132(determines that nothing will happen until some time in the future, it will simply advance the simulation)A
72 237 :M
-.114(to that time, skipping over the intervening interval in one step.  A discrete-event simulator keeps track)A
72 249 :M
-.146(of the current simulation time in an internal variable, and advances simulation time by incrementing that)A
72 261 :M
-.105(variable.  This execution mode allows the user to specify how many times this variable will change)A
72 273 :M
-.082(before the simulation stops and returns control to DBSIM.)A
71 297 :M
f8_12 sf
2.637 .264(1.1.4.  Run for "event changes" Mode)J
72 321 :M
f7_12 sf
-.119(All activities \(events and processes\) that are scheduled to occur in the future, are placed on a linked list)A
72 333 :M
-.104(called the )A
f9_12 sf
-.095(event list. )A
f7_12 sf
-.109( The elements in that list are sorted by the times they are scheduled to wake up.  It)A
72 345 :M
-.101(is possible for more than one simulation activity to be scheduled at the same simulation time, and if so,)A
72 357 :M
-.126(they will be taken off the event list and executed in some sequential order when it is time for them to)A
72 369 :M
-.124(wake up.  However, the simulation time variable will not be incremented until all of the activities)A
72 381 :M
-.12(scheduled at the current time have been removed from the event list and restarted.  The "event changes")A
72 393 :M
-.112(mode allows the user to specify how many activities must be removed from the event list before the)A
72 405 :M
-.106(simulation will complete its current execution phase.  This provides a finer resolution of control than)A
72 417 :M
-.122(the "time changes" mode, since several activities may be removed from the event list without any)A
72 429 :M
-.147(change in the simulation time variable.)A
71 453 :M
f8_12 sf
4.299 .43(1.1.5.  Breakpoints)J
72 477 :M
f7_12 sf
-.078(The user can insert breakpoints in a simulation program's code.  They will cause the simulation to stop)A
72 489 :M
-.109(and return control to DBSIM whenever they are encountered during a simulation.  They are)A
72 501 :M
-.112(implemented as subroutine calls that the user must insert in the program before it is compiled.)A
72 513 :M
-.07(Therefore, they are not as useful as the breakpoints found in other debuggers, because they can not be)A
72 525 :M
-.147(changed during a simulation.  They can all be deactivated or all activated at any time during a)A
72 537 :M
-.092(simulation when DBSIM is in control, but they can not be individually controlled, and new ones can)A
72 549 :M
-.089(not be added.  Breakpoints are only active while a simulation is running under the control of DBSIM.)A
72 561 :M
-.076(If the simulation is run in stand alone mode, the breakpoints are ignored.)A
72 585 :M
f8_12 sf
2.733 .273(1.2.  TRACE FILTERING)J
72 609 :M
f7_12 sf
-.118(All of the RPPT simulators produce trace information as they execute.  The problem is that the amount)A
72 621 :M
-.122(of trace information can be excessive, especially during a large simulation.  There is a limited method)A
72 633 :M
-.11(of controlling the amount of this data built into the simulators, but it can only provide a rather coarse-)A
72 645 :M
-.117(grained ability to filter the trace data presented to the user.  Specifically, the user can insert commands)A
72 657 :M
-.144(in the simulation program that determine the level of tracing that will be in effect.  There are currently)A
72 669 :M
-.117(six levels, with level 0 resulting in no trace data produced and level 5 producing very detailed trace)A
72 681 :M
-.089(information.  As with breakpoints, these trace commands must be inserted into a program before it is)A
72 693 :M
-.082(compiled.)A
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(; page: 6 of 9)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
72 59 :M
f4_12 sf
.548(Introduction)A
550 59 :M
(3)S
70 63 -1 1 560 62 1 70 62 @a
72 81 :M
f7_12 sf
-.113(DBSIM improves on this basic tracing mechanism by providing run time control of the amount and)A
72 93 :M
-.1(type of trace data displayed.  At any point during a simulation when it has stopped and returned to)A
72 105 :M
-.117(DBSIM, the user can change the level of trace data that will be produced in the future.  More)A
72 117 :M
-.113(importantly, the user can also define a subset of the trace data to be displayed by specifying a filter that)A
72 129 :M
-.149(will intercept and eliminate all other output data from the displayed trace.)A
72 153 :M
-.124(The user creates simulation objects by calling special constructor operations from within the simulation)A
72 165 :M
-.088(code.  Each time this is done, the user has the option of specifying a name for that object.  Every trace)A
72 177 :M
-.083(statement produced by the simulators is tagged with one of these object names.  For example, when a)A
72 189 :M
-.119(process changes its state, a trace statement will be generated with its tag equal the name assigned to the)A
72 201 :M
-.097(process.  Each time a synchronization object such as a semaphore is accessed, a trace statement is)A
72 213 :M
-.113(generated with its tag set to the name of the object.  DBSIM filters enable the user to display only those)A
72 225 :M
-.105(trace statements whose tags match a specified set of tag names.)A
72 249 :M
-.097(Several different filters with different tags can be defined for a simulation.  For each of these, the trace)A
72 261 :M
-.121(output can be sent to a file for viewing later.  Alternatively, one filter can be created that displays its)A
72 273 :M
-.123(trace data on the terminal as the simulation executes.  The tags for any of the filters can be changed)A
72 285 :M
-.079(whenever the simulation is suspended and control has returned to DBSIM.)A
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(; page: 7 of 9)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
549 739 :M
f11_12 sf
(4)S
209 86 :M
f8_18 sf
3.2 .32(2.  DBSIM COMMANDS)J
72 129 :M
f7_12 sf
-.111(This section gives the detailed information needed to use DBSIM.  Specifically, it describes the)A
72 141 :M
-.127(commands used to initiate and control the execution phase of a simulation.  There are three categories)A
72 153 :M
-.104(of commands, those that specify parameters such as the execution mode or filter tags, those that initiate)A
72 165 :M
-.129(and control execution of a simulation, and utility commands that provide help information and clear the)A
72 177 :M
-.083(screen.  DBSIM will prompt the user to enter a command whenever the simulation is suspended.)A
72 201 :M
-.132(The command interpreter only looks at the first letter of an entered command name.  Since all)A
72 213 :M
-.078(command names start with a unique letter, this is unambiguous.  As a result the user only needs to)A
72 225 :M
-.13(enter the first character of the command name.)A
72 249 :M
f8_12 sf
3.268 .327(2.1.  INITIATING DBSIM)J
72 273 :M
f7_12 sf
-.081(To start a DBSIM session, the user types "dbsim" at the terminal.  This will start DBSIM and display)A
72 285 :M
-.093(the DBSIM prompt described below.  At this point the user can enter DBSIM commands.  The user)A
72 297 :M
-.099(can also specify the name of a simulation program and its arguments on the command line.  If this is)A
72 309 :M
-.095(done, that program is loaded and initialized before control is given to the user.  Therefore the user)A
72 321 :M
-.117(command to start DBSIM has the following form:)A
108 345 :M
f8_12 sf
-.129(dbsim)A
f7_12 sf
-.068( [ )A
f9_12 sf
-.126(program_name)A
f7_12 sf
-.067(  [ )A
f9_12 sf
-.11(program_argument  program_agrument  ...  program_argument )A
f7_12 sf
-.113(] ])A
72 369 :M
-.11(The program arguments are passed to the simulation program as if it had been started in stand alone)A
72 381 :M
.085(mode.)A
72 405 :M
f8_12 sf
2.351 .235(2.2.  THE DBSIM PROMPT)J
72 429 :M
f7_12 sf
-.083(The DBSIM prompt provides useful information about the status of a simulation.  If no program is)A
72 441 :M
-.08(loaded, the prompt has the following form:)A
108 465 :M
-.078(no program loaded >)A
72 489 :M
-.108(If there is a loaded program, the prompt contains additional information in the following form:)A
108 513 :M
-.125("program name" | "simulation time" >)A
72 537 :M
-.124(The program name is the name of the object file that contains the simulation program.  If that program)A
72 549 :M
-.07(is active, that is, currently executing, the name is followed by an asterisk \(*\).  When the program)A
72 561 :M
-.112(reaches its end and terminates, the asterisk is removed.  Simulation time is the time at which the)A
72 573 :M
-.11(simulation returned control to DBSIM.)A
72 597 :M
f8_12 sf
2.538 .254(2.3.  PARAMETER SETTING COMMANDS)J
72 621 :M
f7_12 sf
-.116(These commands set the parameters that control the execution of a simulation program.  They are used)A
72 633 :M
-.095(to set the execution mode, the step size, the trace level, and the filters to be used in the simulation.)A
72 657 :M
f9_12 sf
-.15(step  [size])A
90 675 :M
f7_12 sf
.858 .086(Entering this command sets the size of the step used in single-stepping to the value of the)J
-1 -1 73 678 1 1 72 660 @b
90 687 :M
2.399 .24(argument )J
f9_12 sf
.424(size)A
f7_12 sf
1.271 .127(.  This argument must be a number.  If )J
f9_12 sf
.424(size)A
f7_12 sf
1.187 .119( is less than or equal to 0, the)J
-1 -1 73 690 1 1 72 677 @b
90 699 :M
1.107 .111(simulator will treat it as an infinite step size.  In this case the simulation will run until it)J
-1 -1 73 702 1 1 72 689 @b
90 711 :M
-.097(terminates or encounters a breakpoint.)A
-1 -1 73 714 1 1 72 701 @b
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(; page: 8 of 9)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
72 59 :M
f4_12 sf
.81(Commands)A
550 59 :M
(5)S
70 63 -1 1 560 62 1 70 62 @a
90 81 :M
f7_12 sf
-.094(If the size argument is omitted, the current value of the step size is displayed.)A
-1 -1 73 84 1 1 72 66 @b
72 105 :M
f9_12 sf
-.21(mode  [name])A
90 123 :M
f7_12 sf
1.307 .131(This command sets the execution mode to )J
f9_12 sf
.456(name)A
f7_12 sf
.989 .099(.  There are four valid choices for )J
f9_12 sf
.608(name)A
-1 -1 73 126 1 1 72 108 @b
90 135 :M
f7_12 sf
-.047(corresponding to the four modes described in Section 1.1 above.)A
-1 -1 73 138 1 1 72 125 @b
112 153 :M
12 f10_1 :p
28 :m
-.217(Name)A
288 153 :M
54 :m
-.198(Description)A
-1 -1 73 156 1 1 72 138 @b
99 171 :M
f9_12 sf
-.184(until_time)A
180 171 :M
f7_12 sf
-.114(The simulation runs until the absolute time specified by the current step size.)A
-1 -1 73 174 1 1 72 156 @b
99 189 :M
f9_12 sf
-.094(for_time)A
180 189 :M
f7_12 sf
-.099(The simulation runs for an amount of time specified by the current step size.)A
-1 -1 73 192 1 1 72 174 @b
99 207 :M
f9_12 sf
-.18(time_changes)A
180 207 :M
f7_12 sf
.25 .025(The simulation runs until time has changed )J
f9_12 sf
.081(n)A
f7_12 sf
.206 .021( times, where )J
f9_12 sf
.081(n)A
f7_12 sf
.201 .02( is the current)J
-1 -1 73 210 1 1 72 192 @b
180 219 :M
-.106(value of the step size converted to an integer.)A
-1 -1 73 222 1 1 72 209 @b
99 237 :M
f9_12 sf
-.136(event_changes)A
180 237 :M
f7_12 sf
.489 .049(The simulation runs until )J
f9_12 sf
.156(n)A
f7_12 sf
.5 .05( activities have been processed from the event)J
-1 -1 73 240 1 1 72 222 @b
180 249 :M
-.083(list, where )A
f9_12 sf
-.113(n)A
f7_12 sf
-.087( is the current value of the step size converted to an integer.)A
-1 -1 73 252 1 1 72 239 @b
90 267 :M
-.025(It is only necessary to enter the first character of these mode name, as all characters except the)A
-1 -1 73 270 1 1 72 252 @b
90 279 :M
-.104(first are ignored by the command interpreter.)A
-1 -1 73 282 1 1 72 269 @b
90 297 :M
-.071(If )A
f9_12 sf
-.126(name)A
f7_12 sf
-.096( is not entered, the command displays the current execution mode.)A
-1 -1 73 300 1 1 72 282 @b
72 321 :M
f9_12 sf
-.356(trace  [level])A
90 339 :M
f7_12 sf
-.068(This command sets the level of tracing to )A
f9_12 sf
-.064(level)A
f7_12 sf
-.072(, which must be an integer between 0 and 5. The)A
-1 -1 73 342 1 1 72 324 @b
90 351 :M
-.08(amount of trace data generated by a simulation varies from none at all when level = 0 to a large)A
-1 -1 73 354 1 1 72 341 @b
90 363 :M
-.058(amount of very detailed trace information when level = 5.  If )A
f9_12 sf
-.055(level)A
f7_12 sf
-.063( is not entered, the command)A
-1 -1 73 366 1 1 72 353 @b
90 375 :M
-.112(displays the current trace level.)A
-1 -1 73 378 1 1 72 365 @b
72 399 :M
f9_12 sf
-.261(break  [status])A
90 417 :M
f7_12 sf
.316 .032(The break command controls the recognition of breakpoint interrupts.  If )J
f9_12 sf
.077(status)A
f7_12 sf
.323 .032( = "enabled",)J
-1 -1 73 420 1 1 72 402 @b
90 429 :M
.856 .086(breakpoints will be accepted; if )J
f9_12 sf
.216(status)A
f7_12 sf
.751 .075( = "ignored", breakpoints will be ignored.  It is only)J
-1 -1 73 432 1 1 72 419 @b
90 441 :M
.006 .001(necessary to enter the first letter of the two possibilities for )J
f9_12 sf
(status)S
f7_12 sf
(.  If )S
f9_12 sf
(status)S
f7_12 sf
( is not entered, the)S
-1 -1 73 444 1 1 72 431 @b
90 453 :M
-.085(command displays the current breakpoint status.)A
-1 -1 73 456 1 1 72 443 @b
72 477 :M
f9_12 sf
-.095(filter   [name]  [ op  [ tag, ... , tag ] ])A
90 495 :M
f7_12 sf
.151 .015(This command is used to create and modify filters.  Filters either collect trace statements in a)J
-1 -1 73 498 1 1 72 480 @b
90 507 :M
.39 .039(disk file or display them on the terminal screen.  Character strings called tags are associated)J
-1 -1 73 510 1 1 72 497 @b
90 519 :M
-.123(with a filter and are used to determine which trace statements go to that filter.  Whenever a trace)A
-1 -1 73 522 1 1 72 509 @b
90 531 :M
-.022(statement is generated during a simulation, its tag is compared to all tags assigned to all active)A
-1 -1 73 534 1 1 72 521 @b
90 543 :M
-.091(filters. Then, a copy of that statement is sent to each filter for which the statement's tag matches)A
-1 -1 73 546 1 1 72 533 @b
90 555 :M
-.033(at least one of the filter's tags.)A
-1 -1 73 558 1 1 72 545 @b
90 573 :M
-.016(Filters are not active unless they have been assigned at least one tag.  If all of a filter's tags are)A
-1 -1 73 576 1 1 72 558 @b
90 585 :M
-.099(deleted, the filter is deactivated.  If it is reactivated later, all its previous trace statements will be)A
-1 -1 73 588 1 1 72 575 @b
90 597 :M
-.085(lost.  Filters are activated whenever they are assigned a tag.)A
-1 -1 73 600 1 1 72 587 @b
90 615 :M
(If )S
f9_12 sf
(name)S
f7_12 sf
-.003( equals the string "stdout", all trace statements sent to that filter will go to the terminal)A
-1 -1 73 618 1 1 72 600 @b
90 627 :M
-.128(screen; otherwise, a file of that name will be opened and all trace statements for the filter will be)A
-1 -1 73 630 1 1 72 617 @b
90 639 :M
-.047(written to that file.  If )A
f9_12 sf
-.074(name)A
f7_12 sf
-.053( is omitted, "stdout" is used.)A
-1 -1 73 642 1 1 72 629 @b
90 657 :M
-.11(If all the arguments are omitted, a list of all active filters and their tags is printed at the terminal.)A
-1 -1 73 660 1 1 72 642 @b
90 669 :M
.176 .018(If )J
f9_12 sf
.135(name)A
f7_12 sf
.374 .037( is specified, but all other arguments are omitted, the tags associated with the named)J
-1 -1 73 672 1 1 72 659 @b
90 681 :M
-.108(filter are printed.)A
-1 -1 73 684 1 1 72 671 @b
90 699 :M
.556 .056(The )J
f9_12 sf
.216(op)A
f7_12 sf
.473 .047( argument must be one of the symbols in the set {+, -, =}.  If )J
f9_12 sf
.216(op)A
f7_12 sf
.563 .056( is '+', the following)J
-1 -1 73 702 1 1 72 684 @b
90 711 :M
.13 .013(tags in the command are added to the filter.  If it is '-', the following tags are deleted from the)J
-1 -1 73 714 1 1 72 701 @b
90 723 :M
.368 .037(filter.  If )J
f9_12 sf
.214(op)A
f7_12 sf
.562 .056( is '-' and there are no following tags in the command, all of the tags previously)J
-1 -1 73 726 1 1 72 713 @b
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(; page: 9 of 9)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
72 59 :M
f4_12 sf
.81(Commands)A
550 59 :M
(6)S
70 63 -1 1 560 62 1 70 62 @a
90 81 :M
f7_12 sf
.826 .083(associated with the filter will be deleted and the filter deactivated.  If )J
f9_12 sf
.305(op)A
f7_12 sf
.603 .06( is '=', all the tags)J
-1 -1 73 84 1 1 72 71 @b
90 93 :M
-.108(previously associated with the filter will be replaced by the following tags in the command.)A
-1 -1 73 96 1 1 72 83 @b
90 111 :M
-.085(The wildcard symbol * may be used at the beginning and/or end of a tag string.)A
-1 -1 73 114 1 1 72 96 @b
72 135 :M
f8_12 sf
2.586 .259(2.4.  EXECUTION CONTROL COMMANDS)J
72 159 :M
f9_12 sf
-.079(load  filename  [ arg, arg, ... , arg ])A
90 177 :M
f7_12 sf
.354 .035(This command loads and initializes the executable simulation program found in the disk file)J
-1 -1 73 180 1 1 72 162 @b
90 189 :M
f9_12 sf
.014(filename)A
f7_12 sf
.046 .005(.  If there are any arguments following filename, they are passed on to the simulation)J
-1 -1 73 192 1 1 72 179 @b
90 201 :M
.032 .003(program as its command line arguments.  If the load is successful, the prompt will display the)J
-1 -1 73 204 1 1 72 191 @b
90 213 :M
-.114(name of the loaded file.)A
-1 -1 73 216 1 1 72 203 @b
90 231 :M
-.049(Only one simulation can be loaded at a time.  DBSIM will not accept the load command if it is)A
-1 -1 73 234 1 1 72 216 @b
90 243 :M
-.102(currently executing a simulation.  Once a simulation has terminated normally, a new one can be)A
-1 -1 73 246 1 1 72 233 @b
90 255 :M
.21 .021(loaded.  The kill command can also be used to force the termination of a simulation before it)J
-1 -1 73 258 1 1 72 245 @b
90 267 :M
-.132(reaches it normal termination point.)A
-1 -1 73 270 1 1 72 257 @b
72 291 :M
f9_12 sf
-.161(execute)A
90 309 :M
f7_12 sf
-.006(This command initiates or continues execution of the currently loaded simulation program.  If)A
-1 -1 73 312 1 1 72 294 @b
90 321 :M
.627 .063(no program is loaded, the command is ignored.  DBSIM turns control over to the program,)J
-1 -1 73 324 1 1 72 311 @b
90 333 :M
1.49 .149(which will run for a period of simulation time determined by the current values for the)J
-1 -1 73 336 1 1 72 323 @b
90 345 :M
.02 .002(execution mode, step size, and breakpoint status.  Then, control will return to DBSIM and the)J
-1 -1 73 348 1 1 72 335 @b
90 357 :M
.26 .026(user will be prompted to enter another command.  Entering a carriage return at the prompt is)J
-1 -1 73 360 1 1 72 347 @b
90 369 :M
-.122(equivalent to entering this command.)A
-1 -1 73 372 1 1 72 359 @b
72 393 :M
f9_12 sf
-.33(reset)A
90 411 :M
f7_12 sf
.284 .028(This command resets the loaded simulation program.  Any command line arguments entered)J
-1 -1 73 414 1 1 72 396 @b
90 423 :M
.107 .011(earlier are passed again to the simulation program.  It is as if the simulation is terminated and)J
-1 -1 73 426 1 1 72 413 @b
90 435 :M
-.112(then reloaded with the load command.)A
-1 -1 73 438 1 1 72 425 @b
72 459 :M
f9_12 sf
-.109(kill)A
90 477 :M
f7_12 sf
.343 .034(Entering this command terminates the currently loaded simulation.  This leaves DBSIM in a)J
-1 -1 73 480 1 1 72 462 @b
90 489 :M
-.07(state with no loaded program.)A
-1 -1 73 492 1 1 72 479 @b
72 513 :M
f9_12 sf
-.117(quit)A
f7_12 sf
0 18 rm
-.131(This command terminates the current simulation and exits DBSIM.)A
0 -18 rm
-1 -1 73 534 1 1 72 516 @b
72 555 :M
f8_12 sf
2.749 .275(2.5.  UTILITY COMMANDS)J
72 579 :M
f9_12 sf
-.663(clear)A
90 597 :M
f7_12 sf
-.126(This command clears the terminal screen.)A
-1 -1 73 600 1 1 72 582 @b
72 621 :M
f9_12 sf
-.182(help [ command_name ])A
90 639 :M
f7_12 sf
.274 .027(If this command is entered with no )J
f9_12 sf
.111(command_name)A
f7_12 sf
.277 .028(, a summary of all the user commands is)J
-1 -1 73 642 1 1 72 624 @b
90 651 :M
.204 .02(displayed on the terminal.  If )J
f9_12 sf
.086(command_name)A
f7_12 sf
.217 .022( is one of the valid commands, a more detailed)J
-1 -1 73 654 1 1 72 641 @b
90 663 :M
-.059(description of that command is displayed.  It is only necessary to enter the first character of the)A
-1 -1 73 666 1 1 72 653 @b
90 675 :M
-.109(command name.)A
-1 -1 73 678 1 1 72 665 @b
endp
%%Trailer
end		% md
%%EOF
